{"version":3,"file":"index.js","sources":["../../src/main.ts"],"sourcesContent":["//---- GLOBAL VARIABLES ----//\r\n\r\n/**\r\n * TODO: Lägg till JSDoc för setup- och draw-funktioner i denna huvudskiss.\r\n */\r\n\r\nlet game: Game;\r\n\r\nlet images: {\r\n  star: p5.Image;\r\n  heart: p5.Image;\r\n  ghost: p5.Image;\r\n  Plant: p5.Image;\r\n  tetrisBlock: p5.Image;\r\n  wallBlock: p5.Image;\r\n  WinBlock: p5.Image;\r\n  background: p5.Image;\r\n};\r\n\r\nlet music: {\r\n  backgroundMusic: p5.SoundFile;\r\n};\r\n\r\nlet sounds: {\r\n  gainheart: p5.SoundFile;\r\n  lostheart: p5.SoundFile;\r\n  gameover: p5.SoundFile;\r\n  ghost: p5.SoundFile;\r\n  starPickUp: p5.SoundFile;\r\n  winner: p5.SoundFile;\r\n  blockCollision: p5.SoundFile;\r\n  wallCollision: p5.SoundFile;\r\n  goalline: p5.SoundFile;\r\n};\r\n\r\nlet customFont: p5.Font;\r\n\r\nconst levelFactory = new LevelFactory();\r\nconst gridSize = levelFactory.gridSize; // Access gridSize directly since it's now public\r\n\r\nlet showGrid: boolean = false; // Toggle for grid visibility\r\n\r\n/**\r\n * Förladdar ljud och bilder.\r\n */\r\nfunction preload() {\r\n  // Load assets here\r\n  music = {\r\n    backgroundMusic: loadSound(\"/assets/music/background-theme.mp3\"),\r\n  };\r\n\r\n  sounds = {\r\n    gainheart: loadSound(\"/assets/sounds/gain-heart.mp3\"),\r\n    lostheart: loadSound(\"/assets/sounds/lost-heart.mp3\"),\r\n    gameover: loadSound(\"/assets/sounds/game-over.mp3\"),\r\n    ghost: loadSound(\"/assets/sounds/ghost.mp3\"),\r\n    starPickUp: loadSound(\"/assets/sounds/star.mp3\"),\r\n    winner: loadSound(\"/assets/sounds/winner.mp3\"),\r\n    blockCollision: loadSound(\"/assets/sounds/error.mp3\"),\r\n    wallCollision: loadSound(\"/assets/sounds/shutdown-sound.mp3\"),\r\n    goalline: loadSound(\"/assets/sounds/goal-line.mp3\"),\r\n  };\r\n\r\n  images = {\r\n    star: loadImage(\"/assets/images/star.webp\"),\r\n    heart: loadImage(\"/assets/images/heart.webp\"),\r\n    ghost: loadImage(\"assets/images/ghost.png\"),\r\n    Plant: loadImage(\"/assets/images/plant.gif\"),\r\n    tetrisBlock: loadImage(\"/assets/images/tetrisBlock.gif\"),\r\n    wallBlock: loadImage(\"/assets/images/wallblock.gif\"),\r\n    WinBlock: loadImage(\"/assets/images/winBlock.gif\"),\r\n    background: loadImage(\"/assets/images/bakgrund.gif\"),\r\n  };\r\n\r\n  customFont = loadFont(\"/assets/fonts/PressStart2P-Regular.ttf\");\r\n}\r\n\r\n/**\r\n * Inställningar för canvas, bildfrekvens och spelobjekt.\r\n * Built in setup function in P5\r\n * This is a good place to create your first class object\r\n * and save it as a global variable so it can be used\r\n * in the draw function belows\r\n */\r\nfunction setup() {\r\n  const canvasWidth = 1600; // Set canvas width\r\n  const canvasHeight = 800; // Set canvas height\r\n  createCanvas(canvasWidth, canvasHeight);\r\n  frameRate(60);\r\n  textFont(customFont);\r\n  game = new Game();\r\n\r\n  music.backgroundMusic.loop();\r\n}\r\n\r\n/**\r\n * Uppdaterar och ritar huvudskärmen i spelet.\r\n * Built in draw function in P5\r\n * This is a good place to call public methods of the object\r\n * you created in the setup function above\r\n */\r\nfunction draw() {\r\n  background(0);\r\n\r\n  game.update();\r\n  game.draw();\r\n\r\n  if (showGrid) {\r\n    drawDebugGrid();\r\n  }\r\n}\r\n\r\n/**\r\n * Built in keyPressed listener function in P5\r\n */\r\n\r\n// Function to draw the debug grid\r\nfunction drawDebugGrid(): void {\r\n  stroke(200, 0, 0, 100); // Red color with transparency\r\n  strokeWeight(1);\r\n\r\n  // Draw vertical lines\r\n  for (let x = 0; x <= width; x += gridSize) {\r\n    line(x, 0, x, height);\r\n  }\r\n\r\n  // Draw horizontal lines\r\n  for (let y = 0; y <= height; y += gridSize) {\r\n    line(0, y, width, y);\r\n  }\r\n}\r\n\r\n// Optional: Toggle grid visibility with the 'G' key\r\nfunction keyPressed() {\r\n  if (key === \"G\" || key === \"g\") {\r\n    showGrid = !showGrid;\r\n  }\r\n}\r\n\r\n/**\r\n *  Built in windowResize listener function in P5\r\n */\r\nfunction windowResized() {\r\n  const newSize = min(windowWidth, windowHeight); // Choose the smaller dimension to maintain a square\r\n  resizeCanvas(newSize, newSize);\r\n}\r\n"],"names":["levelFactory"],"mappings":"ssBAqCA,MAAMA,EAAe,IAAI,aACRA,EAAa"}